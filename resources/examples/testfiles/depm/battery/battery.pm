//Generated by ErrorPro
dtmc
//Element consts
const int Battery=0;
const int Device=1;
const int Generator=2;

//Data values consts
const int OK=10;
const int NO_POWER=11;
const int HAS_POWER=12;
const int FAIL=13;

//Control flow commands
module control_flow
	cf:[0..3] init Generator;
	//Element Battery, df inputs ['gPower', 'bLoad'], cf transitions ['Device']
	[Battery] cf=Battery -> 1.0:(cf'=Device);
	//Element Device, df inputs ['bPower'], cf transitions ['Generator']
	[Device] cf=Device -> 1.0:(cf'=Generator);
	//Element Generator, df inputs ['gState1'], cf transitions ['Battery']
	[Generator] cf=Generator -> 1.0:(cf'=Battery);
endmodule
//Error propagation commands
module error_propagation
	gState1 : [0 .. 13] init OK;
	gPower : [0 .. 13] init HAS_POWER;
	bPower : [0 .. 13] init HAS_POWER;
	bLoad : [0 .. 13] init 5;
	//Element Battery, df inputs ['gPower', 'bLoad'], df outputs ['bPower', 'bLoad']
	[Battery] (gPower=HAS_POWER) & (bLoad<9) -> (bPower'=HAS_POWER) & (bLoad'=bLoad+1);	// <--
	[Battery] (gPower=HAS_POWER) & (bLoad=9) -> (bPower'=HAS_POWER) & (bLoad'=bLoad);	// <--
	[Battery] (gPower=NO_POWER) & (bLoad>0) -> (bPower'=HAS_POWER) & (bLoad'=bLoad-1);	// <--
	[Battery] (gPower=NO_POWER) & (bLoad=0) -> (bPower'=NO_POWER) & (bLoad'=bLoad);	// <--
	//Element Generator, df inputs ['gState1'], df outputs ['gPower', 'gState1']
	[Generator] gState1=OK -> 0.99:(gPower'=HAS_POWER)&(gState1'=OK) + 0.01:(gPower'=NO_POWER)&(gState1'=FAIL);	// <--
	[Generator] gState1=FAIL -> 1: (gPower'=NO_POWER)&(gState1'=FAIL);	// <--
endmodule
//Time reward
rewards "time"
	cf=Battery:1;
	cf=Device:1;
	cf=Generator:1;
endrewards
//Failure formulas
formula Battery_Low = bLoad<3;
formula Generator_Down = gState1=FAIL;
formula Failure = bPower=NO_POWER;
